import React, {Component} from 'react';
import {Link} from 'react-router-dom';
import {connect} from 'react-redux';
import PropTypes from 'prop-types';
import * as authActions from '../../store/actions/auth';

class Navbar extends Component {
  onLogoutClick = (event) => {
    event.preventDefault();
    this.props.initLogoutUser();
  };

  render() {
    const {isAuthenticated, user} = this.props.auth;
    const authenticatedLinks = (
      <ul className="navbar-nav ml-auto">
        <li className="nav-item">
          <a
            className="nav-link p-0"
            href="#logout"
            onClick={this.onLogoutClick}>
            <img
              className="avatar rounded-circle"
              src={user.avatar}
              alt="User avatar"
              title="Avatar generated by Gravatar"/>Logout
          </a>
        </li>
      </ul>
    );
    const guestLinks = (
      <ul className="navbar-nav ml-auto">
        <li className="nav-item">
          <Link className="nav-link" to="/register">Sign Up</Link>
        </li>
        <li className="nav-item">
          <Link className="nav-link" to="/login">Login</Link>
        </li>
      </ul>
    );
    return (
      <nav className="navbar navbar-expand-sm navbar-dark bg-dark mb-4">
        <div className="container">
          <Link className="navbar-brand" to="/">DevConnector</Link>
          <button className="navbar-toggler" type="button" data-toggle="collapse" data-target="#mobile-nav">
            <span className="navbar-toggler-icon"></span>
          </button>

          <div className="collapse navbar-collapse" id="mobile-nav">
            <ul className="navbar-nav mr-auto">
              <li className="nav-item">
                <Link className="nav-link" to="/developers"> Developers</Link>
              </li>
            </ul>
            {isAuthenticated ? authenticatedLinks : guestLinks}
          </div>
        </div>
      </nav>
    );
  }
}

Navbar.propTypes = {
  initLogoutUser: PropTypes.func.isRequired,
  auth: PropTypes.object.isRequired
};

const mapStateToProps = state => {
  return {
    auth: state.auth
  };
};

const mapDispatchToProps = dispatch => {
  return {
    initLogoutUser: () => dispatch(authActions.initLogoutUser())
  };
};

export default connect(mapStateToProps, mapDispatchToProps)(Navbar);